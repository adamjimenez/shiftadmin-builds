{"version":3,"file":"js/704.1c535ffb.js","mappings":"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","sources":["webpack://shiftadmin/./src/components/ListButtons.vue","webpack://shiftadmin/./src/components/ListButtons.vue?469f","webpack://shiftadmin/./src/components/ListPage.vue","webpack://shiftadmin/./src/components/ImportExport.vue","webpack://shiftadmin/./src/components/ImportExport.vue?1464","webpack://shiftadmin/./src/components/BulkEdit.vue","webpack://shiftadmin/./src/components/BulkEdit.vue?b462","webpack://shiftadmin/./src/components/ListPage.vue?6113"],"sourcesContent":["<template>\n    <span class=\"d-flex w-100 align-center\">\n        <v-btn variant=\"text\" title=\"Add\" icon=\"mdi-plus\" :to=\"base + 'section/' + internalSection + '/add' + (parentsection ? '?parentsection=' + parentsection + '&parentid=' + parentid : '')\"></v-btn>\n        <v-btn variant=\"text\" title=\"Fields\" icon=\"mdi-view-column\" v-if=\"!selected.length\" @click=\"changeFields\"></v-btn>\n        <v-btn variant=\"text\" title=\"Bulk Edit\" icon=\"mdi-pencil\" v-if=\"selected.length\" @click=\"doAction('openBulkEdit')\"></v-btn>\n        <v-btn variant=\"text\" title=\"Delete\" icon=\"mdi-delete\" v-if=\"selected.length\" @click=\"doAction('delete')\"></v-btn>\n        <v-btn variant=\"text\" title=\"Import\" icon=\"mdi-import\" v-if=\"!selected.length\" @click=\"openImport\"></v-btn>\n        <v-btn variant=\"text\" title=\"Export\" icon=\"mdi-export\" v-if=\"!selected.length\" @click=\"exportItems\"></v-btn>\n        <v-btn variant=\"text\" title=\"Sort\" icon=\"mdi-sort\" v-if=\"sortable\" @click=\"doAction('openSortable')\"></v-btn>\n\n        <v-menu v-if=\"buttons.length\">\n            <template v-slot:activator=\"{ props }\">\n                <v-btn variant=\"text\" v-bind=\"props\" icon=\"mdi-dots-vertical\"></v-btn>\n            </template>\n            <v-list>\n                <v-list-item v-for=\"(item, index) in buttons\" :key=\"index\" :value=\"index\" @click=\"customButton(item)\">\n                    <v-list-item-title>{{ item.label }}</v-list-item-title>\n                </v-list-item>\n            </v-list>\n        </v-menu>\n\n        <v-spacer></v-spacer>\n        \n        <v-col v-if=\"!mobile\" class=\"text-grey-lighten-1 text-right\">\n            {{ parseInt((data.page - 1) * data.itemsPerPage + 1)?.toLocaleString() }}-{{ Math.min(data.page * data.itemsPerPage, data.totalItems)?.toLocaleString() }} of {{ data.totalItems?.toLocaleString() }}\n        </v-col>\n\n        <v-btn variant=\"text\" icon=\"mdi-chevron-left\" :disabled=\"data.page === 1\" @click=\"prevPage\"></v-btn>\n        <v-btn variant=\"text\" icon=\"mdi-chevron-right\" :disabled=\"data.page * data.itemsPerPage >= data.totalItems\" @click=\"nextPage\"></v-btn>\n    </span>\n</template>\n\n<script>\nexport default {\n    props: {\n        vars: null,\n        section: null,\n        hidebuttons: Boolean,\n        parentsection: null,\n        parentid: null,\n        searchparams: null,\n        selected: null,\n        data: null,\n        headers: null,\n        mobile: null,\n        sortable: Boolean,\n    },\n    data: function () {\n        return {\n            dialog: false,\n            selectedHeaders: [],\n            internalSection: '',\n            loading: false,\n            filter: '',\n        };\n    },\n    methods: {\n        formatString: function (str) {\n            str = str.replace(/_/g, ' ');\n            return str.charAt(0).toUpperCase() + str.slice(1)\n        },\n        doAction: async function (action) {            \n            this.$emit('action', action);\n        },\n        exportItems: function () {\n            this.$emit('action', 'export');\n        },\n        changeFields: function () {\n            this.$emit('changeFields')\n        },\n        customButton: function (button) {\n            this.$emit('action', button);\n        },\n        openImport: function () {\n            this.$emit('action', 'import');\n        },\n        prevPage: function () {\n            this.$emit('action', 'prevPage');\n        },\n        nextPage: function () {\n            this.$emit('action', 'nextPage');\n        },\n    },\n    watch: {\n        section: function (section) {\n            this.internalSection = section;\n        },\n        filter: function (value) {\n            this.$emit('action', 'filter', value);\n        }\n    },\n    computed: {\n        buttons: function () {\n            let buttons = [];\n\n            this.vars?.buttons?.forEach((item, index) => {\n                if (item.page === 'list' && item.section === this.internalSection) {\n                    item.id = index;\n                    buttons.push(item);\n                }\n            })\n\n            return buttons;\n        },\n        base() {\n            let base = '/';\n            if (this.$route.params.base) {\n                base += this.$route.params.base + '/';\n            }\n\n            return base;\n        },\n    },\n    created() {\n        this.internalSection = this.section ? this.section : this.$route.params.section;\n    },\n}\n</script>","import { render } from \"./ListButtons.vue?vue&type=template&id=1ab79d86\"\nimport script from \"./ListButtons.vue?vue&type=script&lang=js\"\nexport * from \"./ListButtons.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <v-layout>\n\n        <v-data-table-server\n            v-model=\"selected\"\n            v-model:items-per-page=\"itemsPerPage\"\n            v-model:sort-by=\"sortBy\"\n            :headers=\"activeHeaders\"\n            :items=\"data.data\"\n            item-value=\"id\"\n            :show-select=\"display.smAndUp\"\n            :hide-default-header=\"!display.smAndUp\"\n            :loading=\"loading\" :items-length=\"totalItems\"\n            :search=\"search\"\n            fixed-header\n            fixed-footer\n            class=\"data-table-server\"\n            :page=\"page\"\n            @click:row=\"rowClick\"\n            @update:sortBy=\"updateSortBy\"\n            @contextmenu:row=\"select\"\n            >\n\n            <template v-slot:top>\n                <v-alert :title=\"error\" type=\"error\" v-if=\"error\" style=\"max-height: 60px;\"></v-alert>\n                <v-sheet color=\"secondary\" class=\"w-100\">\n                    <ListButtons v-if=\"!hidebuttons\" :selected=\"selected\" :section=\"internalSection\" @changeFields=\"dialog = true\"\n                        @action=\"actionHandler\" :vars=\"vars\" :sortable=\"isSortable\" :data=\"buttonData\" :mobile=\"mobile\">\n                    </ListButtons>\n                </v-sheet>\n            </template>        \n\n            <template v-slot:item=\"{ item, internalItem, isSelected, toggleSelect}\">\n                <tr class=\"v-data-table__tr v-data-table__tr--clickable\" :class=\"rowClass(item)\" @click=\"rowClick($event, item)\" @contextmenu=\"select($event, item)\">\n                    <td v-if=\"display.smAndUp\" class=\"v-data-table__td v-data-table-column--no-padding v-data-table-column--align-start border-primary\" style=\"width: 48px;\" :class=\"active === item.id ? 'active border-s-lg' : ''\">\n                        <v-checkbox-btn\n                            :model-value=\"isSelected(internalItem)\"\n                            @click.stop=\"active = item.id; toggleSelect(internalItem, !isSelected(internalItem))\"\n                            hide-details\n                        >                   \n                        </v-checkbox-btn>\n                    </td>\n                    <td v-for=\"header in activeHeaders\" :key=\"header\" class=\"v-data-table__td v-data-table-column--align-start\">\n                        <span v-if=\"['upload', 'file', 'files', 'uploads'].includes(getFieldType(header.value))\">\n                            <v-img :src=\"apiRoot + '?cmd=file&f=' + (Array.isArray(item[header.value]) ? item[header.value][0] : item[header.value]) + '&w=320&h=240'\" style=\"max-width: 160px; max-height: 120px;\"></v-img>\n                        </span>\n                        <span v-else-if=\"['select_multiple'].includes(getFieldType(header.value))\">\n                            {{ Array.isArray(item[header.value]) ? item[header.value].length + ' items' : '' }}\n                        </span>\n                        <span v-else-if=\"['select'].includes(getFieldType(header.value)) && typeof vars.options?.[header.value] === 'object'\">\n                            {{ vars.options[header.value][item[header.value]] || item[header.value] }}\n                        </span>\n                        <span v-else-if=\"item[header.value] && ['editor'].includes(getFieldType(header.value))\">\n                            {{ item[header.value].replace(/(<([^>]+)>)/gi, \"\") }}\n                        </span>\n                        <span v-else>\n                            {{ formatData(item[header.value], getFieldType(header.value)) }}\n                        </span>\n                    </td>\n                </tr>\n            </template>\n\n            <template v-slot:bottom>\n            </template>\n        </v-data-table-server>\n\n        <ImportExport ref=\"importExport\" :headers=\"headers\" :section=\"internalSection\" :fields=\"searchparams\" :columns=\"selectedHeaders\" @reload=\"reload\" />\n        <BulkEdit ref=\"bulkEdit\" :section=\"internalSection\" :fields=\"data?.fields\" @action=\"actionHandler\" :vars=\"vars\" :count=\"selected.length\" :defaultData=\"defaultData\" />\n\n        <v-dialog v-model=\"dialog\" max-width=\"600\" scrollable>\n            <v-card title=\"Fields\">\n                <v-data-table v-model=\"selectedHeaders\" :headers=\"[{ title: 'Field', key: 'title' }]\" :items=\"headers\"\n                    item-value=\"key\" items-per-page=\"-1\" show-select>\n                    <template v-slot:bottom></template>\n                </v-data-table>\n            </v-card>\n        </v-dialog>\n\n        <v-dialog v-model=\"sortableDialog\" max-width=\"600\" scrollable>\n            <v-card title=\"Sort Order\" :loading=\"sortOrderLoading\">\n                <v-card-text>\n                    <draggable v-model=\"sortOrder\" group=\"items\" @start=\"drag = true\" @end=\"drag = false\" item-key=\"id\">\n                        <template #item=\"{ element }\">\n                            <v-sheet color=\"primary\" class=\"ma-5 pa-5\">{{ element.title }}</v-sheet>\n                        </template>\n                    </draggable>\n                </v-card-text>\n                <v-card-actions>\n                    <v-btn variant=\"flat\" color=\"primary\" @click=\"saveSortOrder\">Save</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n    </v-layout>\n</template>\n\n<style>\n.data-table-server .v-table__wrapper {\n    overflow: auto;\n    height: 100px;\n    flex-grow: 1;\n}\n\n.data-table-server .v-data-table__td {\n    max-width: 300px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    border-left: 2px solid transparent;\n}\n\n.data-table-server th:first-child, .data-table-server td:first-child {\n    border-left: 4px solid transparent;\n    padding-left: 4px;\n}\n</style>\n\n<script>\nimport api from \"../services/api\";\nimport util from \"../services/util\";\nimport qs from \"qs\";\nimport ListButtons from \"./ListButtons\";\nimport draggable from 'vuedraggable'\nimport ImportExport from \"./ImportExport\";\nimport BulkEdit from \"./BulkEdit\";\n\nexport default {\n    components: {\n        ListButtons,\n        draggable,\n        ImportExport,\n        BulkEdit,\n    },\n    props: {\n        vars: null,\n        section: null,\n        hidebuttons: Boolean, // used when included in view page\n        parentsection: null,\n        parentid: null,\n        searchparams: null,\n        mobile: null,\n    },\n    data: function () {\n        return {\n            dialog: false,\n            selectedHeaders: [], // flat array of header column names to display\n            headers: [], // array of all headers (title, key)\n            selected: [],\n            data: {},\n            internalSection: '',\n            loading: false,\n            sortableDialog: false,\n            totalItems: 0,\n            itemsPerPage: 20,\n            page: 0,\n            search: '',\n            drag: false,\n            sortOrder: [],\n            sortOrderLoading: false,\n            file: [],\n            filter: '',\n            buttonData: {},\n            defaultData: {}, // used for bulk edit\n            sortBy: [],\n            error: '',\n            active: 0,\n        };\n    },\n    methods: {\n        formatString: function (string) {\n            return util.formatString(string);\n        },\n        loadItems: async function () {\n            if (!this.page) {\n                if (localStorage['page_' + this.internalSection] > 0) {\n                    this.page = parseInt(localStorage['page_' + this.internalSection]);\n                } else {\n                    this.page = 1;\n                }\n            }\n\n            if (!this.active && localStorage['active_' + this.internalSection] > 0) {\n                this.active = localStorage['active_' + this.internalSection];\n            }\n\n            let searchParams = this.searchparams;\n\n            if (this.filter) {\n                searchParams.s = this.filter;\n            }\n\n            let data = {\n                cmd: 'get',\n                section: this.internalSection,\n                fields: searchParams,\n                page: this.page,\n                itemsPerPage: this.itemsPerPage,\n                sortBy: this.sortBy,\n                columns: this.selectedHeaders\n            };\n\n            if (this.parentsection) {\n                data.parentsection = this.parentsection;\n            }\n\n            if (this.parentid) {\n                data.parentid = this.parentid;\n            }\n\n            const params = qs.stringify(data);\n\n            this.loading = true;\n            this.error = '';\n\n            let result = {};\n            try {\n                result = await api.get('?' + params.toString(), data);\n            } catch (error) {\n                console.log(error)\n            }\n\n            if (result.data.error) {\n                this.error = result.data.error;\n            }\n\n            this.loading = false;\n\n            if (!result.data?.fields) {\n                return false;\n            }\n\n            if (!result.data.data) {\n                result.data.data = [];\n                result.data.total = 0;\n            }\n\n            // format data\n            result.data.data.forEach(item => {\n                for (const [, field] of Object.entries(result.data.fields)) {\n                    if (item[field.column + '_label']) {\n                        item[field.column] = item[field.column + '_label'];\n                    }\n                }\n            });\n\n            this.data = result.data;\n            this.totalItems = this.data.total;\n\n            // reset active if not visible\n            if (!this.data.data.find(obj => obj.id === this.active)) {\n                this.active = this.data.data[0]?.id;\n            }\n\n            // pagination\n            this.buttonData = {\n                page: this.page,\n                itemsPerPage: this.itemsPerPage,\n                totalItems: this.totalItems,\n            };\n\n            // headers\n            let headers = [];\n            let allHeaders = Object.values(result.data.fields);\n\n            if (allHeaders.length && !allHeaders.find(obj => obj.column === 'id')) {\n                // redirect\n                let base = util.base();\n                this.$router.push(base + 'section/' + this.internalSection + '/1/');\n                return false;\n            }\n\n            for (const [, field] of Object.entries(this.data.fields)) {\n                headers.push({\n                    title: this.formatString(field.column),\n                    key: field.column,\n                });\n            }\n            this.headers = headers;\n\n            // wait for selected headers to be filtered\n            await this.$nextTick();\n\n            let allHeaderKeys = allHeaders.map(item => item.column);\n\n            if (!this.selectedHeaders.length) {\n                this.selectedHeaders = allHeaderKeys;\n            }\n\n            this.$emit('changeHeaders', allHeaders)\n\n            this.sortOrder = [];\n            if (this.isSortable) {\n                this.data.data.forEach((item) => {\n                    let key = Object.keys(item)[0];\n                    this.sortOrder.push({ title: key + ': ' + item[key], id: item.id, position: item.position });\n                });\n\n                this.sortOrder.sort((a, b) => {\n                    return a.position - b.position;\n                })\n            }\n\n            let title = this.vars?.branding?.title ? this.vars.branding.title : 'ADMIN';\n            document.title = title + ' | ' + this.formatString(this.internalSection);\n\n            await this.$nextTick();\n\n            this.$emit('updateCount', this.data);\n            this.$emit('loaded')\n        },\n        rowClick: function (e, item) {\n            this.active = item.id;\n\n            let base = '/';\n            if (this.$route.params.base) {\n                base += this.$route.params.base + '/';\n            }\n\n            let link = base + 'section/' + this.internalSection + '/' + item.id + '/';\n\n            if (this.parentsection) {\n                link += '?parentsection=' + this.parentsection + '&parentid=' + this.parentid;\n            }\n\n            this.$router.push({ path: link, query: this.searchparams });\n        },\n        actionHandler: async function (button) {\n            let data = {};\n\n            if (button === 'export') {\n                if (!['Pro', 'Business', 'Trial'].includes(util.getEdition())) {\n                    this.$router.push(util.base() + 'upgrade');\n                    return;\n                }\n\n                this.$refs['importExport'].exportItems();\n                return\n            } else if (button === 'import') {\n                if (!['Pro', 'Business', 'Trial'].includes(util.getEdition())) {\n                    this.$router.push(util.base() + 'upgrade');\n                    return;\n                }\n                \n                this.$refs['importExport'].openImport();\n                return\n            } else if (button === 'openBulkEdit') {\n                this.defaultData = {};\n\n                let i = 0;\n                this.selected.forEach(id => {\n                    let row = this.data.data.find(item => id == item.id);\n\n                    for (const [key, value] of Object.entries(row)) {\n                        if (i === 0) {\n                            this.defaultData[key] = value;\n                        } else if (this.defaultData[key] !== value) {\n                            this.defaultData[key] = null;\n                        }\n                    }\n\n                    i++;\n                })\n\n                this.$refs['bulkEdit'].open();\n                return\n            } else if (button === 'openSortable') {\n                this.sortableDialog = true\n                return\n            } else if (button === 'filter') {\n                this.filter = arguments[1];\n                this.reload();\n                return\n            } else if (button === 'prevPage') {\n                if (this.page === 1) {\n                    return;\n                }\n                this.page--;\n                this.reload();\n                return\n            } else if (button === 'nextPage') {\n                if (this.page * this.itemsPerPage >= this.totalItems) {\n                    return;\n                }\n\n                this.page++;\n                this.reload();\n                return\n            } else if (typeof button === 'string') {\n                if (button === 'delete' && !this.data?.fields.deleted && !confirm('Are you sure you want to delete these items?')) {\n                    return;\n                }\n\n                data = {\n                    cmd: button,\n                    section: this.internalSection,\n                    ids: this.selected,\n                }; \n\n                if (typeof arguments[1] === 'object') {\n                    data = { ...data, ...arguments[1]};\n                }\n\n                this.loading = true;\n                const result = await api.post('?cmd=' + button + '&section=' + this.internalSection, data);\n                this.loading = false;\n\n                if (result.data.error) {\n                    this.error = result.data.error;\n                } else {\n                    this.reload();\n                }\n\n                return;\n            }\n\n            // custom button\n            if (!['Pro', 'Business', 'Trial'].includes(util.getEdition())) {\n                this.$router.push(util.base() + 'upgrade');\n                return;\n            }\n\n            data = {\n                cmd: 'button',\n                button: button.id,\n                section: this.internalSection,\n                ids: this.selected,\n            };\n\n            this.loading = true;\n            const result = await api.post('?cmd=button&section=' + this.internalSection, data);\n            this.loading = false;\n\n            if (result.data.error) {\n                this.error = result.data.error;\n            }\n\n            if (result.data.result?.redirect) {\n                if (button.target) {\n                    window.open(result.data.result.redirect);\n                } else {\n                    location.href = result.data.result.redirect;\n                }\n            } else {\n                this.reload();\n            }\n        },\n        saveSortOrder: async function () {\n            let data = {\n                cmd: 'reorder',\n                section: this.section,\n                items: this.sortOrder,\n            };\n\n            this.sortOrderLoading = true;\n            await api.post('?cmd=reorder&section=' + this.internalSection, data);\n            this.sortOrderLoading = false;\n\n            this.sortableDialog = false;\n            this.reload();\n        },\n        reload: function () {\n            this.loadItems();\n        },\n        updateSortBy: function (newVal) {\n            localStorage['sortBy_' + this.internalSection] = JSON.stringify(newVal);\n            this.reload();\n        },\n        getFieldType: function (header) {\n            return this.data?.fields[header.replaceAll('_', ' ')]?.type\n        },\n        formatData: function (data, type) {\n            return util.formatData(data, type);\n        },\n        onKeydown: async function (event) {\n            let index;\n            let el;\n\n            switch (event.key) {\n                case 'ArrowDown':\n                    event.preventDefault();\n                    index = this.data.data.findIndex(obj => obj.id === this.active);\n\n                    if (index + 1 < this.data.data.length) {\n                        this.active = this.data.data[index + 1].id;\n                    }\n                    \n                    await this.$nextTick();\n\n                    el = document.getElementsByClassName('active')[0];\n                    el.scrollIntoView(false);\n                break;\n                case 'ArrowUp':\n                    event.preventDefault();\n                    index = this.data.data.findIndex(obj => obj.id === this.active);\n\n                    if (index > 0) {\n                        this.active = this.data.data[index - 1].id;\n                    }\n\n                    await this.$nextTick();\n\n                    el = document.getElementsByClassName('active')[0];\n                    el.scrollIntoView(false);\n                break;\n                case 'Enter':\n                    //event.preventDefault();\n                    //this.rowClick(event, { id: this.active });\n                break;\n            }\n        },      \n        rowClass(data) {\n            return this.selected.find(item => item === data.id) ? 'bg-primary' : '';\n        },  \n        select(event, item) {\n            event.preventDefault();\n\n            let found = -1;\n            this.selected.forEach((v, index) => {\n                if (item.id == v) {\n                    found = index;\n                }\n            });\n\n            if (found > -1) {\n                this.selected.splice(found, 1);\n            } else {\n                this.selected.push(item.id);\n            }\n        },\n        selectNone() {\n            this.selected = [];\n        }\n    },\n    watch: {\n        internalSection: function (newVal) {\n            this.selectedHeaders = localStorage['fields_' + newVal] ? JSON.parse(localStorage['fields_' + newVal]) : [];\n            this.sortBy = localStorage['sortBy_' + newVal] ? JSON.parse(localStorage['sortBy_' + newVal]) : [];\n            this.page = 0;\n            this.selected = [];\n            this.reload();\n        },\n        $route(route) {\n            if (this.internalSection !== route.params.section) {\n                this.internalSection = route.params.section;\n            } else {\n                this.page = 1;\n                this.reload();\n            }\n        },\n        section: function (section) {\n            this.internalSection = section;\n\n            if (section) {\n                this.reload();\n            }\n        },\n        selectedHeaders: function (newVal, oldVal) {            \n            if (JSON.stringify(newVal) !== JSON.stringify(oldVal)) {\n                localStorage['fields_' + this.internalSection] = JSON.stringify(Object.values(newVal));\n            }\n\n            // get active fields\n            if (this.data.fields) {\n                let fields = [];\n                \n                for (const [, field] of Object.entries(this.data.fields)) {\n                    if (newVal.includes(field.column)) {\n                        fields.push(field);\n                    }\n                }\n\n                this.$emit('changeFields', fields);\n            }\n        },\n        headers: function (headers) {\n            let saved = localStorage['fields_' + this.internalSection];\n            let selectedHeaders = saved ? JSON.parse(saved) : headers.map(item => item.key);\n\n            // check the headers exist\n            let allHeaderKeys = headers.map(item => item.key);\n            selectedHeaders = selectedHeaders.filter((header) => allHeaderKeys.includes(header));\n\n            this.selectedHeaders = selectedHeaders;\n        },\n        selected: function (items) {\n            this.$emit('changeSelected', items);\n        },\n        page: function (newVal) {\n            localStorage['page_' + this.internalSection] = newVal;\n        },\n        active: function (newVal) {\n            localStorage['active_' + this.internalSection] = newVal;\n        }\n    },\n    computed: {\n        activeHeaders: function () { // turns selectedHeaders array into multidimensional array\n            let activeHeaders = [];\n\n            if (this.data.fields) {\n                Object.values(this.data.fields).forEach((item) => {\n                    if (this.selectedHeaders.includes(item.column)) {\n                        activeHeaders.push({\n                            title: this.formatString(item.column),\n                            value: item.column,\n                            sortable: true, // used by v-data-table\n                        });\n                    }\n                });\n            }\n\n            return activeHeaders;\n        },\n        isSortable: function () {\n            let isSortable = false;\n            if (this.data.fields) {\n                Object.values(this.data.fields).forEach((item) => {\n                    if (item.type === 'position') {\n                        isSortable = true;\n                    }\n                });\n            }\n            return isSortable;\n        }\n    },\n    created() {\n        this.display = this.$vuetify.display;\n        this.internalSection = this.section ? this.section : this.$route.params.section;\n        this.apiRoot = api.getApiRoot()\n    },\n    mounted() {\n        document.addEventListener( \"keydown\", this.onKeydown );\n    },\n    unmounted() {\n        document.removeEventListener( \"keydown\", this.onKeydown );\n    }\n}\n</script>","<template>\n    <v-dialog v-model=\"importDialog\" max-width=\"600\" scrollable>\n        <v-card title=\"Import\">\n            <v-card-text>\n                <v-alert v-if=\"error\" :text=\"error\" type=\"error\" />\n                <v-file-input v-model=\"file\" label=\"CSV file\" @update:modelValue=\"readFile\"></v-file-input>\n\n                <div v-if=\"importHeaders.length\">\n                    <h4>Match up the fields</h4>\n                    <div v-for=\"(header, index) in headers\" :key=\"index\">\n                        <v-select :items=\"importHeaders\" :label=\"header.title\" v-model=\"importCols[header.key]\" />\n                    </div>\n                </div>\n            </v-card-text>\n            <v-card-actions>\n                <v-btn @click=\"doImport\" variant=\"flat\" color=\"primary\" :disabled=\"!importHeaders.length\">Import</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport api from \"../services/api\";\nimport qs from \"qs\";\n\nexport default {\n    props: {\n        headers: null,\n        section: null,\n        fields: null,\n        columns: null,\n    },\n    data: function () {\n        return {\n            error: '',\n            importDialog: false,\n            importHeaders: [],\n            importCols: {},\n        };\n    },\n    methods: {\n        openImport: function () {\n            this.importDialog = true;\n        },\n        doImport: async function () {\n            const formData = new FormData();\n\n            // form data\n            for (const [name, value] of Object.entries(this.importCols)) {\n                formData.append('fields[' + name + ']', value);\n            }\n            \n            // get file data\n            formData.append('file', this.file[0]);\n\n            this.error = '';\n            this.loading = true;\n\n            const result = await api.post('?cmd=import&section=' + this.internalSection, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                }\n            });\n            this.loading = false;\n\n            if (result.data.error) {\n                this.error = result.data?.error;\n                return;\n            }\n\n            this.importDialog = false;\n            this.$emit('reload');\n        },\n        readFile: function () {\n            const fileReader = new FileReader();\n            fileReader.onload = (e) => {\n                const csvData = e.target.result;\n                const rows = csvData.split('\\n');\n\n                let headers = [];\n                let rowData = rows[0].split(',');\n                for (let i = 0; i < rowData.length; i++) {\n                    const field = rowData[i].trim();\n                    if (field.startsWith('\"') && field.endsWith('\"')) {\n                        headers.push(field.slice(1, -1)); // Extract content excluding quotes\n                    } else {\n                        headers.push(field);\n                    }\n                }\n\n                let preview = [];\n                rowData = rows[1].split(',');\n                for (let i = 0; i < rowData.length; i++) {\n                    const field = rowData[i].trim();\n                    if (field.startsWith('\"') && field.endsWith('\"')) {\n                        preview.push(field.slice(1, -1)); // Extract content excluding quotes\n                    } else {\n                        preview.push(field);\n                    }\n                }\n\n                this.importHeaders = [];\n                headers.forEach((item, index) => {\n                    this.importHeaders.push({\n                        value: index,\n                        raw: item,\n                        title: item + ' - ' + preview[index],\n                    });\n                });\n\n                // auto-match columns\n                this.importCols = {};\n                this.headers.forEach((header) => {\n                    let option = this.importHeaders.find(item => item.raw === header.key);\n                    this.importCols[header.key] = option ? option.value : '';\n                });\n            };\n            fileReader.readAsText(this.file[0]);\n        },\n        exportItems: function () {\n            let data = {\n                cmd: 'export',\n                section: this.section,\n                fields: this.fields,\n                columns: this.columns,\n            };\n\n            const params = qs.stringify(data);\n\n            window.open(api.getApiRoot() + '?' + params);\n        },\n    }\n}\n</script>","import { render } from \"./ImportExport.vue?vue&type=template&id=3c93cfcf\"\nimport script from \"./ImportExport.vue?vue&type=script&lang=js\"\nexport * from \"./ImportExport.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <v-dialog v-model=\"dialog\" max-width=\"600\" scrollable>\n        <v-card :title=\"'Editing ' + count + ' files'\">\n            <v-card-text>\n                <v-alert v-if=\"error\" :text=\"error\" type=\"error\" />\n\n                <template v-for=\"field in fields\" :key=\"field.type\">\n                    <v-list-item v-if=\"!['id'].includes(field.type)\">\n                        <template v-slot:prepend>\n                            <v-checkbox v-model=\"enabled[field.column]\"></v-checkbox>\n                        </template>\n\n                        <v-checkbox v-if=\"['checkbox'].includes(field.type)\" :label=\"formatString(field.column)\"\n                            v-model=\"params[field.column]\" :disabled=\"!enabled[field.column]\" />\n                        <v-select v-else-if=\"['select'].includes(field.type)\" :label=\"formatString(field.column)\"\n                            :items=\"options[field.column]\" v-model=\"params[field.column]\"\n                            :disabled=\"!enabled[field.column]\" />\n                        <v-select v-else-if=\"['select_multiple'].includes(field.type)\"\n                            :label=\"formatString(field.column)\" :items=\"options[field.column]\"\n                            v-model=\"params[field.column]\" multiple chips :disabled=\"!enabled[field.column]\">\n                        </v-select>\n                        <v-autocomplete v-else-if=\"field.type === 'combo'\" :label=\"formatString(field.column)\"\n                            v-model=\"params[field.column]\" :items=\"options[field.column]\"\n                            @update:search=\"updateCombo($event, field.column)\" :disabled=\"!enabled[field.column]\" />\n                        <v-text-field v-else :label=\"formatString(field.column)\" v-model=\"params[field.column]\"\n                            :disabled=\"!enabled[field.column]\" />\n                    </v-list-item>\n                </template>\n            </v-card-text>\n            <v-card-actions>\n                <v-btn @click=\"save\" variant=\"flat\" color=\"primary\" :disabled=\"!hasChanges\">Save</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport api from \"../services/api\";\nimport util from \"../services/util\";\n\nexport default {\n    props: {\n        section: null,\n        fields: null,\n        vars: null,\n        count: null,\n        defaultData: null,\n    },\n    data: function () {\n        return {\n            dialog: false,\n            error: '',\n            params: {},\n            enabled: {},\n            options: {},\n        };\n    },\n    methods: {\n        open: async function () {\n            this.options = await util.getAllOptions(this.fields, this.vars.options, {});\n            this.params = this.defaultData;\n            this.dialog = true;\n        },\n        formatString: function (string) {\n            return util.formatString(string);\n        },\n        save: function () {\n            let data = {};\n\n            for (const [key, values] of Object.entries(this.params)) {\n                if (this.enabled[key]) {\n                    data[key] = values;\n                }\n            }\n\n            this.$emit('action', 'bulkedit', { data: data });\n            this.dialog = false;\n        },\n        updateCombo: async function (term, column) {\n            const result = await api.get('?cmd=autocomplete&field=' + column + '&term=' + term);\n            this.options[column] = result.data;\n        },\n    },\n    computed: {\n        hasChanges: function () {\n            return Object.values(this.enabled).filter(item => item === true).length > 0;\n        }\n    }\n}\n</script>","import { render } from \"./BulkEdit.vue?vue&type=template&id=d90f071a\"\nimport script from \"./BulkEdit.vue?vue&type=script&lang=js\"\nexport * from \"./BulkEdit.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ListPage.vue?vue&type=template&id=d81fe11e\"\nimport script from \"./ListPage.vue?vue&type=script&lang=js\"\nexport * from \"./ListPage.vue?vue&type=script&lang=js\"\n\nimport \"./ListPage.vue?vue&type=style&index=0&id=d81fe11e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_v_btn","variant","title","icon","to","$options","base","_ctx","internalSection","$props","parentsection","parentid","selected","length","_createCommentVNode","_createBlock","key","onClick","changeFields","_cache","$event","doAction","openImport","exportItems","sortable","buttons","_component_v_menu","activator","_withCtx","props","_mergeProps","default","_component_v_list","_Fragment","_renderList","item","index","_component_v_list_item","value","customButton","_component_v_list_item_title","_createTextVNode","_toDisplayString","label","_","_component_v_spacer","mobile","_component_v_col","parseInt","data","page","itemsPerPage","toLocaleString","Math","min","totalItems","disabled","prevPage","nextPage","vars","section","hidebuttons","Boolean","searchparams","headers","dialog","selectedHeaders","loading","filter","methods","formatString","str","replace","charAt","toUpperCase","slice","async","action","this","$emit","button","watch","computed","forEach","id","push","$route","params","created","__exports__","render","_component_v_layout","_component_v_data_table_server","modelValue","sortBy","updateSortBy","activeHeaders","items","display","smAndUp","search","rowClick","select","top","error","_component_v_alert","type","style","_component_v_sheet","color","_component_ListButtons","onChangeFields","onAction","actionHandler","isSortable","buttonData","internalItem","isSelected","toggleSelect","_createElementVNode","_normalizeClass","rowClass","onContextmenu","active","_component_v_checkbox_btn","_withModifiers","header","includes","getFieldType","_hoisted_2","_component_v_img","src","apiRoot","Array","isArray","_hoisted_3","options","_hoisted_4","_hoisted_5","_hoisted_6","formatData","bottom","_component_ImportExport","ref","fields","columns","onReload","reload","_component_BulkEdit","count","defaultData","_component_v_dialog","scrollable","_component_v_card","_component_v_data_table","sortableDialog","sortOrderLoading","_component_v_card_text","_component_draggable","sortOrder","group","onStart","drag","onEnd","element","_component_v_card_actions","saveSortOrder","importDialog","text","_component_v_file_input","file","readFile","importHeaders","_component_v_select","importCols","doImport","formData","FormData","name","Object","entries","append","result","api","post","fileReader","FileReader","onload","e","csvData","target","rows","split","rowData","i","field","trim","startsWith","endsWith","preview","raw","option","find","readAsText","cmd","qs","window","open","getApiRoot","prepend","_component_v_checkbox","enabled","column","multiple","chips","_component_v_autocomplete","updateCombo","_component_v_text_field","save","hasChanges","util","getAllOptions","string","values","term","get","components","ListButtons","draggable","ImportExport","BulkEdit","loadItems","localStorage","searchParams","s","toString","console","log","total","obj","allHeaders","$router","$nextTick","allHeaderKeys","map","keys","position","sort","a","b","branding","document","link","path","query","getEdition","$refs","row","arguments","deleted","confirm","ids","redirect","location","href","newVal","JSON","stringify","replaceAll","onKeydown","event","el","preventDefault","findIndex","getElementsByClassName","scrollIntoView","found","v","splice","selectNone","parse","route","oldVal","saved","$vuetify","mounted","addEventListener","unmounted","removeEventListener"],"sourceRoot":""}