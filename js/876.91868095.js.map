{"version":3,"file":"js/876.91868095.js","mappings":"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","sources":["webpack://shiftadmin/./src/components/ListButtons.vue","webpack://shiftadmin/./src/components/ListButtons.vue?469f","webpack://shiftadmin/./src/components/ListPage.vue","webpack://shiftadmin/./src/components/ImportExport.vue","webpack://shiftadmin/./src/components/ImportExport.vue?1464","webpack://shiftadmin/./src/components/BulkEdit.vue","webpack://shiftadmin/./src/components/BulkEdit.vue?b462","webpack://shiftadmin/./src/components/ListPage.vue?6113"],"sourcesContent":["<template>\n    <span class=\"d-flex w-100 align-center\">\n        <v-btn variant=\"text\" title=\"Add\" icon=\"mdi-plus\" :to=\"base + 'section/' + internalSection + '/add' + (parentsection ? '?parentsection=' + parentsection + '&parentid=' + parentid : '')\"></v-btn>\n        <v-btn variant=\"text\" title=\"Fields\" icon=\"mdi-view-column\" color=\"grey-lighten-1\" @click=\"changeFields\"></v-btn>\n        <v-btn variant=\"text\" title=\"Bulk Edit\" icon=\"mdi-pencil\" color=\"grey-lighten-1\" v-if=\"selected.length\" @click=\"doAction('openBulkEdit')\"></v-btn>\n        <v-btn variant=\"text\" title=\"Delete\" icon=\"mdi-delete\" color=\"grey-lighten-1\" v-if=\"selected.length\" @click=\"doAction('delete')\"></v-btn>\n        <v-btn variant=\"text\" title=\"Import\" icon=\"mdi-import\" color=\"grey-lighten-1\" @click=\"openImport\"></v-btn>\n        <v-btn variant=\"text\" title=\"Export\" icon=\"mdi-export\" color=\"grey-lighten-1\" @click=\"exportItems\"></v-btn>\n        <v-btn variant=\"text\" title=\"Sort\" icon=\"mdi-sort\" color=\"grey-lighten-1\" v-if=\"sortable\" @click=\"doAction('openSortable')\"></v-btn>\n\n        <v-menu v-if=\"buttons.length\">\n            <template v-slot:activator=\"{ props }\">\n                <v-btn variant=\"text\" v-bind=\"props\" icon=\"mdi-dots-vertical\"></v-btn>\n            </template>\n            <v-list>\n                <v-list-item v-for=\"(item, index) in buttons\" :key=\"index\" :value=\"index\" @click=\"customButton(item)\">\n                    <v-list-item-title>{{ item.label }}</v-list-item-title>\n                </v-list-item>\n            </v-list>\n        </v-menu>\n\n        <v-spacer></v-spacer>\n        \n        <v-col v-if=\"!mobile\" class=\"text-grey-lighten-1 text-right\">\n            {{ parseInt((data.page - 1) * data.itemsPerPage + 1)?.toLocaleString() }}-{{ Math.min(data.page * data.itemsPerPage, data.totalItems)?.toLocaleString() }} of {{ data.totalItems?.toLocaleString() }}\n        </v-col>\n\n        <v-btn variant=\"text\" icon=\"mdi-chevron-left\" :disabled=\"data.page === 1\" @click=\"prevPage\"></v-btn>\n        <v-btn variant=\"text\" icon=\"mdi-chevron-right\" :disabled=\"data.page * data.itemsPerPage >= data.totalItems\" @click=\"nextPage\"></v-btn>\n    </span>\n</template>\n\n<script>\nexport default {\n    props: {\n        vars: null,\n        section: null,\n        hidebuttons: Boolean,\n        parentsection: null,\n        parentid: null,\n        searchparams: null,\n        selected: null,\n        data: null,\n        headers: null,\n        mobile: null,\n        sortable: Boolean,\n    },\n    data: function () {\n        return {\n            dialog: false,\n            selectedHeaders: [],\n            internalSection: '',\n            loading: false,\n            filter: '',\n        };\n    },\n    methods: {\n        formatString: function (str) {\n            str = str.replace(/_/g, ' ');\n            return str.charAt(0).toUpperCase() + str.slice(1)\n        },\n        doAction: async function (action) {            \n            this.$emit('action', action);\n        },\n        exportItems: function () {\n            this.$emit('action', 'export');\n        },\n        changeFields: function () {\n            this.$emit('changeFields')\n        },\n        customButton: function (button) {\n            this.$emit('action', button);\n        },\n        openImport: function () {\n            this.$emit('action', 'import');\n        },\n        prevPage: function () {\n            this.$emit('action', 'prevPage');\n        },\n        nextPage: function () {\n            this.$emit('action', 'nextPage');\n        },\n    },\n\n    watch: {\n        section: function (section) {\n            this.internalSection = section;\n        },\n        filter: function (value) {\n            this.$emit('action', 'filter', value);\n        }\n    },\n\n    computed: {\n        buttons: function () {\n            let buttons = [];\n\n            this.vars?.buttons?.forEach((item, index) => {\n                if (item.page === 'list' && item.section === this.internalSection) {\n                    item.id = index;\n                    buttons.push(item);\n                }\n            })\n\n            return buttons;\n        },\n        base() {\n            let base = '/';\n            if (this.$route.params.base) {\n                base += this.$route.params.base + '/';\n            }\n\n            return base;\n        },\n    },\n\n    created() {\n        this.internalSection = this.section ? this.section : this.$route.params.section;\n    },\n\n};\n</script>","import { render } from \"./ListButtons.vue?vue&type=template&id=02bca2e4\"\nimport script from \"./ListButtons.vue?vue&type=script&lang=js\"\nexport * from \"./ListButtons.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <v-layout>\n\n        <v-data-table-server v-model=\"selected\" :headers=\"activeHeaders\" :items=\"data.data\" item-value=\"id\" show-select\n            @click:row=\"rowClick\" :loading=\"loading\" :items-length=\"totalItems\"\n            v-model:items-per-page=\"itemsPerPage\" :search=\"search\" fixed-header fixed-footer class=\"data-table-server\" :page=\"page\"\n            v-model:sort-by=\"sortBy\" @update:sortBy=\"updateSortBy\"\n            >\n\n            <template v-slot:top>\n                <v-alert :title=\"error\" type=\"error\" v-if=\"error\" style=\"max-height: 60px;\"></v-alert>\n                <v-sheet color=\"secondary\" class=\"w-100\">\n                    <ListButtons v-if=\"!hidebuttons\" :selected=\"selected\" :section=\"internalSection\" @changeFields=\"dialog = true\"\n                        @action=\"actionHandler\" :vars=\"vars\" :sortable=\"isSortable\" :data=\"buttonData\" :mobile=\"mobile\">\n                    </ListButtons>\n                </v-sheet>\n            </template>        \n        \n            <template v-slot:item=\"{ item, internalItem, isSelected, toggleSelect}\">\n                <tr class=\"v-data-table__tr v-data-table__tr--clickable\" @click=\"rowClick($event, item)\">\n                    <td class=\"v-data-table__td v-data-table-column--no-padding v-data-table-column--align-start\" style=\"width:  48px;\">\n                        <v-checkbox-btn\n                        :model-value=\"isSelected(internalItem)\"\n                        hide-details\n                        @click.stop=\"toggleSelect(internalItem,!isSelected(internalItem))\"\n                        >                   \n                        </v-checkbox-btn>\n                    </td>\n                    <td v-for=\"header in activeHeaders\" :key=\"header\" class=\"v-data-table__td v-data-table-column--align-start\">\n                        <span v-if=\"['upload', 'file', 'files', 'uploads'].includes(getFieldType(header.value))\">\n                            <v-img :src=\"apiRoot + '?cmd=file&f=' + (Array.isArray(item[header.value]) ? item[header.value][0] : item[header.value]) + '&w=320&h=240'\" style=\"max-width: 160px; max-height: 120px;\"></v-img>\n                        </span>\n                        <span v-else-if=\"['select_multiple'].includes(getFieldType(header.value))\">\n                            {{ Array.isArray(item[header.value]) ? item[header.value].length + ' items' : '' }}\n                        </span>\n                        <span v-else-if=\"['select'].includes(getFieldType(header.value)) && typeof vars.options?.[header.value] === 'object'\">\n                            {{ vars.options[header.value][item[header.value]] || item[header.value] }}\n                        </span>\n                        <span v-else-if=\"item[header.value] && ['editor'].includes(getFieldType(header.value))\">\n                            {{ item[header.value].replace(/(<([^>]+)>)/gi, \"\") }}\n                        </span>\n                        <span v-else>\n                            {{ formatData(item[header.value], getFieldType(header.value)) }}\n                        </span>\n                    </td>\n                </tr>\n            </template>\n\n            <template v-slot:bottom>\n            </template>\n        </v-data-table-server>\n\n        <ImportExport ref=\"importExport\" :headers=\"headers\" :section=\"internalSection\" :fields=\"searchparams\" :columns=\"selectedHeaders\" @reload=\"reload\" />\n        <BulkEdit ref=\"bulkEdit\" :section=\"internalSection\" :fields=\"data?.fields\" @action=\"actionHandler\" :vars=\"vars\" :count=\"selected.length\" :defaultData=\"defaultData\" />\n\n        <v-dialog v-model=\"dialog\" max-width=\"600\" scrollable>\n            <v-card title=\"Fields\">\n                <v-data-table v-model=\"selectedHeaders\" :headers=\"[{ title: 'Field', key: 'title' }]\" :items=\"headers\"\n                    item-value=\"key\" items-per-page=\"-1\" show-select>\n                    <template v-slot:bottom></template>\n                </v-data-table>\n            </v-card>\n        </v-dialog>\n\n        <v-dialog v-model=\"sortableDialog\" max-width=\"600\" scrollable>\n            <v-card title=\"Sort Order\" :loading=\"sortOrderLoading\">\n                <v-card-text>\n                    <draggable v-model=\"sortOrder\" group=\"items\" @start=\"drag = true\" @end=\"drag = false\" item-key=\"id\">\n                        <template #item=\"{ element }\">\n                            <v-sheet color=\"primary\" class=\"ma-5 pa-5\">{{ element.title }}</v-sheet>\n                        </template>\n                    </draggable>\n                </v-card-text>\n                <v-card-actions>\n                    <v-btn variant=\"flat\" color=\"primary\" @click=\"saveSortOrder\">Save</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n    </v-layout>\n</template>\n\n<style>\n.data-table-server .v-table__wrapper {\n    overflow: auto;\n    height: 100px;\n    flex-grow: 1;\n}\n\n.data-table-server .v-data-table__td {\n    max-width: 300px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n</style>\n\n<script>\nimport api from \"../services/api\";\nimport util from \"../services/util\";\nimport qs from \"qs\";\nimport ListButtons from \"./ListButtons\";\nimport draggable from 'vuedraggable'\nimport ImportExport from \"./ImportExport\";\nimport BulkEdit from \"./BulkEdit\";\n\nexport default {\n    components: {\n        ListButtons,\n        draggable,\n        ImportExport,\n        BulkEdit,\n    },\n    props: {\n        vars: null,\n        section: null,\n        hidebuttons: Boolean, // used when included in view page\n        parentsection: null,\n        parentid: null,\n        searchparams: null,\n        mobile: null,\n    },\n    data: function () {\n        return {\n            dialog: false,\n            selectedHeaders: [], // flat array of header column names to display\n            headers: [], // array of all headers (title, key)\n            selected: [],\n            data: {},\n            internalSection: '',\n            loading: false,\n            sortableDialog: false,\n            totalItems: 0,\n            itemsPerPage: 20,\n            page: 0,\n            search: '',\n            drag: false,\n            sortOrder: [],\n            sortOrderLoading: false,\n            file: [],\n            filter: '',\n            buttonData: {},\n            defaultData: {}, // used for bulk edit\n            sortBy: [],\n            error: '',\n        };\n    },\n    methods: {\n        formatString: function (string) {\n            return util.formatString(string);\n        },\n        loadItems: async function () {\n            if (!this.page) {\n                if (localStorage['page_' + this.internalSection] > 0) {\n                    this.page = parseInt(localStorage['page_' + this.internalSection]);\n                } else {\n                    this.page = 1;\n                }\n            }\n\n            let searchParams = this.searchparams;\n\n            if (this.filter) {\n                searchParams['s'] = this.filter;\n            }\n\n            let data = {\n                cmd: 'get',\n                section: this.internalSection,\n                fields: searchParams,\n                page: this.page,\n                itemsPerPage: this.itemsPerPage,\n                sortBy: this.sortBy,\n                columns: this.selectedHeaders\n            };\n\n            if (this.parentsection) {\n                data.parentsection = this.parentsection;\n            }\n\n            if (this.parentid) {\n                data.parentid = this.parentid;\n            }\n\n            const params = qs.stringify(data);\n\n            this.loading = true;\n            this.error = '';\n\n            let result = {};\n            try {\n                result = await api.get('?' + params.toString(), data);\n            } catch (error) {\n                console.log(error)\n            }\n\n            if (result.data.error) {\n                this.error = result.data.error;\n            }\n\n            this.loading = false;\n\n            if (!result.data?.fields) {\n                return false;\n            }\n\n            if (!result.data.data) {\n                result.data.data = [];\n                result.data.total = 0;\n            }\n\n            // format data\n            result.data.data.forEach(item => {\n                for (const [, field] of Object.entries(result.data.fields)) {\n                    if (item[field.column + '_label']) {\n                        item[field.column] = item[field.column + '_label'];\n                    }\n                }\n            });\n\n            this.data = result.data;\n            this.totalItems = this.data.total;\n\n            // pagination\n            this.buttonData = {\n                page: this.page,\n                itemsPerPage: this.itemsPerPage,\n                totalItems: this.totalItems,\n            };\n\n            // headers\n            let headers = [];\n            let allHeaders = Object.values(result.data.fields);\n\n            if (allHeaders.length && !allHeaders.find(obj => obj.column === 'id')) {\n                // redirect\n                let base = util.base();\n                this.$router.push(base + 'section/' + this.internalSection + '/1/');\n                return false;\n            }\n\n            for (const [, field] of Object.entries(this.data.fields)) {\n                headers.push({\n                    title: this.formatString(field.column),\n                    key: field.column,\n                });\n            }\n            this.headers = headers;\n\n            // wait for selected headers to be filtered\n            await this.$nextTick();\n\n            let allHeaderKeys = allHeaders.map(item => item.column);\n\n            if (!this.selectedHeaders.length) {\n                this.selectedHeaders = allHeaderKeys;\n            }\n\n            this.$emit('changeHeaders', allHeaders)\n\n            this.sortOrder = [];\n            if (this.isSortable) {\n                this.data.data.forEach((item) => {\n                    let key = Object.keys(item)[0];\n                    this.sortOrder.push({ title: key + ': ' + item[key], id: item.id, position: item.position });\n                });\n\n                this.sortOrder.sort((a, b) => {\n                    return a.position - b.position;\n                })\n            }\n\n            let title = this.vars?.branding?.title ? this.vars.branding.title : 'ADMIN';\n            document.title = title + ' | ' + this.formatString(this.internalSection);\n\n            await this.$nextTick();\n\n            this.$emit('updateCount', this.data);\n            this.$emit('loaded')\n        },\n        rowClick: function (e, item) {\n            let base = '/';\n            if (this.$route.params.base) {\n                base += this.$route.params.base + '/';\n            }\n\n            let link = base + 'section/' + this.internalSection + '/' + item.id + '/';\n\n            if (this.parentsection) {\n                link += '?parentsection=' + this.parentsection + '&parentid=' + this.parentid;\n            }\n\n            this.$router.push(link);\n        },\n        actionHandler: async function (button) {\n            let data = {};\n\n            if (button === 'export') {\n                if (!['Pro', 'Business', 'Trial'].includes(util.getEdition())) {\n                    this.$router.push(util.base() + 'upgrade');\n                    return;\n                }\n\n                this.$refs['importExport'].exportItems();\n                return\n            } else if (button === 'import') {\n                if (!['Pro', 'Business', 'Trial'].includes(util.getEdition())) {\n                    this.$router.push(util.base() + 'upgrade');\n                    return;\n                }\n                \n                this.$refs['importExport'].openImport();\n                return\n            } else if (button === 'openBulkEdit') {\n                this.defaultData = {};\n\n                let i = 0;\n                this.selected.forEach(id => {\n                    let row = this.data.data.find(item => id == item.id);\n\n                    for (const [key, value] of Object.entries(row)) {\n                        if (i === 0) {\n                            this.defaultData[key] = value;\n                        } else if (this.defaultData[key] !== value) {\n                            this.defaultData[key] = null;\n                        }\n                    }\n\n                    i++;\n                })\n\n                this.$refs['bulkEdit'].open();\n                return\n            } else if (button === 'openSortable') {\n                this.sortableDialog = true\n                return\n            } else if (button === 'filter') {\n                this.filter = arguments[1];\n                this.reload();\n                return\n            } else if (button === 'prevPage') {\n                if (this.page === 1) {\n                    return;\n                }\n                this.page--;\n                this.reload();\n                return\n            } else if (button === 'nextPage') {\n                if (this.page * this.itemsPerPage >= this.totalItems) {\n                    return;\n                }\n\n                this.page++;\n                this.reload();\n                return\n            } else if (typeof button === 'string') {\n                if (button === 'delete' && !this.data?.fields.deleted && !confirm('Are you sure you want to delete these items?')) {\n                    return;\n                }\n\n                data = {\n                    cmd: button,\n                    section: this.internalSection,\n                    ids: this.selected,\n                }; \n\n                if (typeof arguments[1] === 'object') {\n                    data = { ...data, ...arguments[1]};\n                }\n\n                this.loading = true;\n                const result = await api.post('?cmd=' + button + '&section=' + this.internalSection, data);\n                this.loading = false;\n\n                if (result.data.error) {\n                    this.error = result.data.error;\n                } else {\n                    this.reload();\n                }\n\n                return;\n            }\n\n            // custom button\n            if (!['Pro', 'Business', 'Trial'].includes(util.getEdition())) {\n                this.$router.push(util.base() + 'upgrade');\n                return;\n            }\n\n            data = {\n                cmd: 'button',\n                button: button.id,\n                section: this.internalSection,\n                ids: this.selected,\n            };\n\n            this.loading = true;\n            const result = await api.post('?cmd=button&section=' + this.internalSection, data);\n            this.loading = false;\n\n            if (result.data.error) {\n                this.error = result.data.error;\n            }\n\n            if (result.data.result?.redirect) {\n                if (button.target) {\n                    window.open(result.data.result.redirect);\n                } else {\n                    location.href = result.data.result.redirect;\n                }\n            } else {\n                this.reload();\n            }\n        },\n        saveSortOrder: async function () {\n            let data = {\n                cmd: 'reorder',\n                section: this.section,\n                items: this.sortOrder,\n            };\n\n            this.sortOrderLoading = true;\n            await api.post('?cmd=reorder&section=' + this.internalSection, data);\n            this.sortOrderLoading = false;\n\n            this.sortableDialog = false;\n            this.reload();\n        },\n        reload: function () {\n            this.loadItems();\n        },\n        updateSortBy: function (newVal) {\n            localStorage['sortBy_' + this.internalSection] = JSON.stringify(newVal);\n            this.reload();\n        },\n        getFieldType: function (header) {\n            return this.data?.fields[header.replaceAll('_', ' ')]?.type\n        },\n        formatData: function (data, type) {\n            return util.formatData(data, type);\n        }\n    },\n    watch: {\n        internalSection: function (newVal) {\n            if (localStorage['fields_' + newVal]) {\n                this.selectedHeaders = JSON.parse(localStorage['fields_' + newVal]);\n            } else {\n                this.selectedHeaders = [];\n            }\n\n            if (localStorage['sortBy_' + newVal]) {\n                this.sortBy = JSON.parse(localStorage['sortBy_' + newVal]);\n            } else {\n                this.sortBy = [];\n            }\n\n            this.page = 0;\n            this.reload();\n        },\n        $route(route) {\n            this.internalSection = route.params.section;\n            this.reload();\n        },\n        section: function (section) {\n            this.internalSection = section;\n\n            if (section) {\n                this.reload();\n            }\n        },\n        selectedHeaders: function (newVal, oldVal) {            \n            if (JSON.stringify(newVal) !== JSON.stringify(oldVal)) {\n                localStorage['fields_' + this.internalSection] = JSON.stringify(Object.values(newVal));\n            }\n\n            // get active fields\n            if (this.data.fields) {\n                let fields = [];\n                \n                for (const [, field] of Object.entries(this.data.fields)) {\n                    if (newVal.includes(field.column)) {\n                        fields.push(field);\n                    }\n                }\n\n                this.$emit('changeFields', fields);\n            }\n        },\n        headers: function (headers) {\n            let saved = localStorage['fields_' + this.internalSection];\n            let selectedHeaders = saved ? JSON.parse(saved) : headers.map(item => item.key);\n\n            // check the headers exist\n            let allHeaderKeys = headers.map(item => item.key);\n            selectedHeaders = selectedHeaders.filter((header) => allHeaderKeys.includes(header));\n\n            this.selectedHeaders = selectedHeaders;\n        },\n        selected: function (items) {\n            this.$emit('changeSelected', items);\n        },\n        page: function (newVal) {\n            localStorage['page_' + this.internalSection] = newVal;\n        }\n    },\n    computed: {\n        activeHeaders: function () { // turns selectedHeaders array into multidimensional array\n            let activeHeaders = [];\n\n            if (this.data.fields) {\n                Object.values(this.data.fields).forEach((item) => {\n                    if (this.selectedHeaders.includes(item.column)) {\n                        activeHeaders.push({\n                            title: this.formatString(item.column),\n                            value: item.column,\n                            sortable: true, // used by v-data-table\n                        });\n                    }\n                });\n            }\n\n            return activeHeaders;\n        },\n        isSortable: function () {\n            let isSortable = false;\n            if (this.data.fields) {\n                Object.values(this.data.fields).forEach((item) => {\n                    if (item.type === 'position') {\n                        isSortable = true;\n                    }\n                });\n            }\n            return isSortable;\n        }\n    },\n    created() {\n        this.internalSection = this.section ? this.section : this.$route.params.section;\n        this.apiRoot = api.getApiRoot()\n    },\n};\n</script>","<template>\n    <v-dialog v-model=\"importDialog\" max-width=\"600\" scrollable>\n        <v-card title=\"Import\">\n            <v-card-text>\n                <v-alert v-if=\"error\" :text=\"error\" type=\"error\" />\n                <v-file-input v-model=\"file\" label=\"CSV file\" @update:modelValue=\"readFile\"></v-file-input>\n\n                <div v-if=\"importHeaders.length\">\n                    <h4>Match up the fields</h4>\n                    <div v-for=\"(header, index) in headers\" :key=\"index\">\n                        <v-select :items=\"importHeaders\" :label=\"header.title\" v-model=\"importCols[header.key]\" />\n                    </div>\n                </div>\n            </v-card-text>\n            <v-card-actions>\n                <v-btn @click=\"doImport\" variant=\"flat\" color=\"primary\" :disabled=\"!importHeaders.length\">Import</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport api from \"../services/api\";\nimport qs from \"qs\";\n\nexport default {\n    props: {\n        headers: null,\n        section: null,\n        fields: null,\n        columns: null,\n    },\n    data: function () {\n        return {\n            error: '',\n            importDialog: false,\n            importHeaders: [],\n            importCols: {},\n        };\n    },\n    methods: {\n        openImport: function () {\n            this.importDialog = true;\n        },\n        doImport: async function () {\n            const formData = new FormData();\n\n            // form data\n            for (const [name, value] of Object.entries(this.importCols)) {\n                formData.append('fields[' + name + ']', value);\n            }\n            \n            // get file data\n            formData.append('file', this.file[0]);\n\n            this.error = '';\n            this.loading = true;\n\n            const result = await api.post('?cmd=import&section=' + this.internalSection, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                }\n            });\n            this.loading = false;\n\n            if (result.data.error) {\n                this.error = result.data?.error;\n                return;\n            }\n\n            this.importDialog = false;\n            this.$emit('reload');\n        },\n        readFile: function () {\n            const fileReader = new FileReader();\n            fileReader.onload = (e) => {\n                const csvData = e.target.result;\n                const rows = csvData.split('\\n');\n\n                let headers = [];\n                let rowData = rows[0].split(',');\n                for (let i = 0; i < rowData.length; i++) {\n                    const field = rowData[i].trim();\n                    if (field.startsWith('\"') && field.endsWith('\"')) {\n                        headers.push(field.slice(1, -1)); // Extract content excluding quotes\n                    } else {\n                        headers.push(field);\n                    }\n                }\n\n                let preview = [];\n                rowData = rows[1].split(',');\n                for (let i = 0; i < rowData.length; i++) {\n                    const field = rowData[i].trim();\n                    if (field.startsWith('\"') && field.endsWith('\"')) {\n                        preview.push(field.slice(1, -1)); // Extract content excluding quotes\n                    } else {\n                        preview.push(field);\n                    }\n                }\n\n                this.importHeaders = [];\n                headers.forEach((item, index) => {\n                    this.importHeaders.push({\n                        value: index,\n                        raw: item,\n                        title: item + ' - ' + preview[index],\n                    });\n                });\n\n                // auto-match columns\n                this.importCols = {};\n                this.headers.forEach((header) => {\n                    let option = this.importHeaders.find(item => item.raw === header.key);\n                    this.importCols[header.key] = option ? option.value : '';\n                });\n            };\n            fileReader.readAsText(this.file[0]);\n        },\n        exportItems: function () {\n            let data = {\n                cmd: 'export',\n                section: this.section,\n                fields: this.fields,\n                columns: this.columns,\n            };\n\n            const params = qs.stringify(data);\n\n            window.open(api.getApiRoot() + '?' + params);\n        },\n    }\n}\n</script>","import { render } from \"./ImportExport.vue?vue&type=template&id=3c93cfcf\"\nimport script from \"./ImportExport.vue?vue&type=script&lang=js\"\nexport * from \"./ImportExport.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <v-dialog v-model=\"dialog\" max-width=\"600\" scrollable>\n        <v-card :title=\"'Editing ' + count + ' files'\">\n            <v-card-text>\n                <v-alert v-if=\"error\" :text=\"error\" type=\"error\" />\n\n                <template v-for=\"field in fields\" :key=\"field.type\">\n                    <v-list-item v-if=\"!['id'].includes(field.type)\">\n                        <template v-slot:prepend>\n                            <v-checkbox v-model=\"enabled[field.column]\"></v-checkbox>\n                        </template>\n\n                        <v-checkbox v-if=\"['checkbox'].includes(field.type)\" :label=\"formatString(field.column)\"\n                            v-model=\"params[field.column]\" :disabled=\"!enabled[field.column]\" />\n                        <v-select v-else-if=\"['select'].includes(field.type)\" :label=\"formatString(field.column)\"\n                            :items=\"options[field.column]\" v-model=\"params[field.column]\"\n                            :disabled=\"!enabled[field.column]\" />\n                        <v-select v-else-if=\"['select_multiple'].includes(field.type)\"\n                            :label=\"formatString(field.column)\" :items=\"options[field.column]\"\n                            v-model=\"params[field.column]\" multiple chips :disabled=\"!enabled[field.column]\">\n                        </v-select>\n                        <v-autocomplete v-else-if=\"field.type === 'combo'\" :label=\"formatString(field.column)\"\n                            v-model=\"params[field.column]\" :items=\"options[field.column]\"\n                            @update:search=\"updateCombo($event, field.column)\" :disabled=\"!enabled[field.column]\" />\n                        <v-text-field v-else :label=\"formatString(field.column)\" v-model=\"params[field.column]\"\n                            :disabled=\"!enabled[field.column]\" />\n                    </v-list-item>\n                </template>\n            </v-card-text>\n            <v-card-actions>\n                <v-btn @click=\"save\" variant=\"flat\" color=\"primary\" :disabled=\"!hasChanges\">Save</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport api from \"../services/api\";\nimport util from \"../services/util\";\n\nexport default {\n    props: {\n        section: null,\n        fields: null,\n        vars: null,\n        count: null,\n        defaultData: null,\n    },\n    data: function () {\n        return {\n            dialog: false,\n            error: '',\n            params: {},\n            enabled: {},\n            options: {},\n        };\n    },\n    methods: {\n        open: async function () {\n            this.options = await util.getAllOptions(this.fields, this.vars.options, {});\n            console.log(this.defaultData)\n            this.params = this.defaultData;\n            this.dialog = true;\n        },\n        formatString: function (string) {\n            return util.formatString(string);\n        },\n        save: function () {\n            this.$emit('action', 'bulkedit', { data: this.params });\n            this.dialog = false;\n        },\n        updateCombo: async function (term, column) {\n            const result = await api.get('?cmd=autocomplete&field=' + column + '&term=' + term);\n            this.options[column] = result.data;\n        },\n    },\n    computed: {\n        hasChanges: function () {\n            return Object.values(this.enabled).filter(item => item === true).length > 0;\n        }\n    },\n}\n</script>","import { render } from \"./BulkEdit.vue?vue&type=template&id=c49ce996\"\nimport script from \"./BulkEdit.vue?vue&type=script&lang=js\"\nexport * from \"./BulkEdit.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ListPage.vue?vue&type=template&id=14682e5e\"\nimport script from \"./ListPage.vue?vue&type=script&lang=js\"\nexport * from \"./ListPage.vue?vue&type=script&lang=js\"\n\nimport \"./ListPage.vue?vue&type=style&index=0&id=14682e5e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_v_btn","variant","title","icon","to","$options","base","_ctx","internalSection","$props","parentsection","parentid","color","onClick","changeFields","selected","length","_createBlock","key","_cache","$event","doAction","_createCommentVNode","openImport","exportItems","sortable","buttons","_component_v_menu","activator","_withCtx","props","_mergeProps","default","_component_v_list","_Fragment","_renderList","item","index","_component_v_list_item","value","customButton","_component_v_list_item_title","_createTextVNode","_toDisplayString","label","_","_component_v_spacer","mobile","_component_v_col","parseInt","data","page","itemsPerPage","toLocaleString","Math","min","totalItems","disabled","prevPage","nextPage","vars","section","hidebuttons","Boolean","searchparams","headers","dialog","selectedHeaders","loading","filter","methods","formatString","str","replace","charAt","toUpperCase","slice","async","action","this","$emit","button","watch","computed","forEach","id","push","$route","params","created","__exports__","render","style","_component_v_layout","_component_v_data_table_server","modelValue","activeHeaders","items","rowClick","search","sortBy","updateSortBy","top","error","_component_v_alert","type","_component_v_sheet","_component_ListButtons","onChangeFields","onAction","actionHandler","isSortable","buttonData","internalItem","isSelected","toggleSelect","_createElementVNode","_hoisted_2","_component_v_checkbox_btn","_withModifiers","header","includes","getFieldType","_hoisted_3","_component_v_img","src","apiRoot","Array","isArray","_hoisted_4","options","_hoisted_5","_hoisted_6","_hoisted_7","formatData","bottom","_component_ImportExport","ref","fields","columns","onReload","reload","_component_BulkEdit","count","defaultData","_component_v_dialog","scrollable","_component_v_card","_component_v_data_table","sortableDialog","sortOrderLoading","_component_v_card_text","_component_draggable","sortOrder","group","onStart","drag","onEnd","element","_component_v_card_actions","saveSortOrder","importDialog","text","_component_v_file_input","file","readFile","importHeaders","_component_v_select","importCols","doImport","formData","FormData","name","Object","entries","append","result","api","post","fileReader","FileReader","onload","e","csvData","target","rows","split","rowData","i","field","trim","startsWith","endsWith","preview","raw","option","find","readAsText","cmd","qs","window","open","getApiRoot","prepend","_component_v_checkbox","enabled","column","multiple","chips","_component_v_autocomplete","updateCombo","_component_v_text_field","save","hasChanges","util","getAllOptions","console","log","string","term","get","values","components","ListButtons","draggable","ImportExport","BulkEdit","loadItems","localStorage","searchParams","toString","total","allHeaders","obj","$router","$nextTick","allHeaderKeys","map","keys","position","sort","a","b","branding","document","link","getEdition","$refs","row","arguments","deleted","confirm","ids","redirect","location","href","newVal","JSON","stringify","replaceAll","parse","route","oldVal","saved"],"sourceRoot":""}